<style tyle="less">
  .skillCellImg {
    margin-right:9px;
    vertical-align: middle;
    width:13px;
    height: 13px;
  }
  .button-sp-area{
    margin: 0 auto;
    padding-top: 15px;
    padding-bottom:15px;
    width: 88%;
  }
  .skillTreeImg {
    width:100%;
    height:400px;
  }
</style>
<template>
  <canvas class="skillTreeImg" canvas-id="skillTree" style="display: {{showCanvas}}"></canvas>
  <view class="page__bd">
      <repeat for="{{skills}}" key="index" item="item">
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell">
          <view class="weui-cell__bd">{{item.floor}}</view>
          <view class="weui-cell__bd">{{item.name}}</view>
          <view class="weui-cell__ft" @tap="enableAdd({{index}} , {{item}})">
            <image class="skillCellImg" src="../images/add.png"></image>
          </view>
          <view class="weui-cell__ft" @tap="enableEdit({{index}} , {{item}})">
            <image class="skillCellImg" src="../images/edit.png"></image>
          </view>
          <view class="weui-cell__ft" @tap="deleteSkill({{index}} , {{item}})">
            <image class="skillCellImg" src="../images/delete.png"></image>
          </view>
        </view>
        </view>
        <view class="weui-cell weui-cell_input" style="display:{{item.showEdit}}">
          <view class="weui-cell__hd">
            <view class="weui-label">编辑技能</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" placeholder="请输入技能名称" bindinput="changeNewSkillValue"/>
          </view>
          <view class="weui-cell__ft" @tap="editSkill({{index}} , {{item}})">
            <icon type="success_no_circle" size="23" color="#E64340"></icon>
          </view>
        </view>
        <view class="weui-cell weui-cell_input" style="display:{{item.showAdd}}">
          <view class="weui-cell__hd">
            <view class="weui-label">新增技能</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" placeholder="请输入技能名称" bindinput="changeNewSkillValue"/>
          </view>
          <view class="weui-cell__ft" @tap="addSkill({{index}} , {{item}})">
            <icon type="success_no_circle" size="23" color="#E64340"></icon>
          </view>
        </view>
      </repeat>
  </view>
  <view class="page__bd page__bd_spacing">
    <view class="button-sp-area">
      <button class="weui-btn" type="primary" bindtap="generateSkillTreeImg">生成技能图</button>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import TestMixin from '../mixins/test'
  export default class SkillCell extends wepy.component {
    data = {
      newSkill: '',
      deviceWidth: wx.getSystemInfoSync().windowWidth,
      colors: ['DarkGreen', 'DarkRed', 'Green', 'Black', 'Blue', 'Pink']
    }
    mixins = [TestMixin]
    methods = {
      changeNewSkillValue(event) {
        this.newSkill = event.detail.value
      },
      addSkill(index, item) {
        this.skills.splice(index + 1, 0, {
          name: this.newSkill,
          floor: item.floor + 1,
          showEdit: 'none',
          showAdd: 'none'
        })
        this.skills[index].showAdd = 'none'
        this.newSkill = ''
      },
      enableAdd(index, item) {
        this.skills[index].showAdd = ''
      },
      enableEdit(index, item) {
        this.skills[index].showEdit = ''
      },
      editSkill(index, item) {
        this.skills[index].name = this.newSkill
        this.skills[index].showEdit = 'none'
        this.newSkill = ''
      },
      deleteSkill(index, item) {
        if (index === 0) {
          return
        }
        let num = 1
        let keepOn = true
        this.skills.forEach((v, i) => {
          if (i > index && v.floor > item.floor && keepOn) {
            num++
          }
          if (i > index && v.floor <= item.floor) {
            keepOn = false
          }
        })
        this.skills.splice(index, num)
      },
      generateSkillTreeImg() {
        this.showPanel = 'none'
        this.showCanvas = ''
        let getRandomNum = function(Min, Max) {
          let Range = Max - Min
          let Rand = Math.random()
          return (Min + Math.round(Rand * Range))
        }
        let Treedata = this.getTreeData()
        let ctx = wx.createCanvasContext('skillTree', this)
        ctx.setFontSize(15)
        Treedata.forEach((item, index) => {
          ctx.fillText(item.name, item.x, item.y)
          ctx.setLineWidth(1)
          if (index > 0) {
            let fatherIndex = item.father
            ctx.setStrokeStyle(this.colors[getRandomNum(0, 5)])
            ctx.beginPath()
            ctx.moveTo(Treedata[fatherIndex].x, Treedata[fatherIndex].y)
            ctx.quadraticCurveTo(Treedata[fatherIndex].x, Treedata[fatherIndex].y, item.x, item.y)
            ctx.stroke()
          }
        })
        ctx.draw()
      }
    }
    getTreeData() {
      let _skills = this.skills
      // 获取每个skill渲染的位置
      let heightArr = Array.apply(null, Array(_skills.length)).map(x => 0)
      const l = _skills.length
      _skills.map((v, index) => {
        let thisFloor = _skills[index].floor
        if (index === 0) {
          _skills[index]['y'] = 300
        } else if (index > 1 && heightArr[thisFloor] === 0) {
          _skills[index]['y'] = heightArr[thisFloor - 1]
          heightArr[thisFloor] = heightArr[thisFloor - 1]
        } else if (index > 1 && heightArr[thisFloor] !== 0) {
          _skills[index]['y'] = heightArr[thisFloor] + 30
          heightArr[thisFloor] += 30
        } else {
          _skills[index]['y'] = 30
          heightArr[thisFloor] += 30
        }
        _skills[index]['x'] = _skills[index].floor * 75 - 70
      })

      // 找到每个skill的父亲
      let i = l - 1
      while (i >= 0) {
        let j = i - 1
        while (j >= 0 && _skills[j].floor >= _skills[i].floor) {
          j--
        }
        _skills[i]['father'] = j
        i--
      }
      return _skills
    }
  }
</script>
